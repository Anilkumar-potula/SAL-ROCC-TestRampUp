<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="RECORD 07-03-20 6.25.42 AM" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">salhealth009-rocc.cloud.pcftest.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">dc.services.visualstudio.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">media.twiliocdn.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">eventgw.twilio.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/serverlogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;loginUserName&quot;:&quot;ghankoo.sal@yopmail.com&quot;,&quot;loginUserKey&quot;:&quot;#Welcome123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">serverlogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/v1/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getVersion&quot;,&quot;variables&quot;:{&quot;appName&quot;:&quot;ROCC_VERSION&quot;},&quot;query&quot;:&quot;query getVersion($appName: String) {\n  configurationVariable: configuration_variables(where: {configuration_key: {_eq: $appName}}) {\n    id\n    appVersion: configuration_value\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">acd6b03a-352f-4dd7-93cb-ab662423c34f</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PhoneCall" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/roccWebAppLogger" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;logMsg&quot;:&quot;{\&quot;type\&quot;:\&quot;INFO\&quot;,\&quot;logMessage\&quot;:\&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4 &apos;s presence updated to AVAILABLE\&quot;}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">roccWebAppLogger</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.c3b9d124dcd94ed5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/Token" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;phoneNumber&quot;:&quot;+1 4252432344&quot;,&quot;orgId&quot;:1,&quot;tokenType&quot;:&quot;WEB_TO_PHONE&quot;,&quot;userId&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">philips/rocc/Token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">acd6b03a-352f-4dd7-93cb-ab662423c34f</stringProp>
                </elementProp>
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.5d9e9da9da504456</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/PresenceStatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;presenceType&quot;:&quot;AVAILABLE&quot;,&quot;userId&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;sessionId&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0_955&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">philips/rocc/presence/PresenceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">acd6b03a-352f-4dd7-93cb-ab662423c34f</stringProp>
                </elementProp>
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.d4d157a4f3694e79</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/user/MissedCall/021d5324-3547-41a2-aeb1-a1b284abfcb4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">philips/rocc/user/MissedCall/021d5324-3547-41a2-aeb1-a1b284abfcb4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">acd6b03a-352f-4dd7-93cb-ab662423c34f</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2020-07-03T00:56:49.700Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Message&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;MessageData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;message&quot;:&quot;{\&quot;type\&quot;:\&quot;INFO\&quot;,\&quot;logMessage\&quot;:\&quot;Tracking Data\&quot;,\&quot;contextData\&quot;:\&quot;{\\\&quot;app\\\&quot;:\\\&quot;AppLayout\\\&quot;,\\\&quot;component\\\&quot;:\\\&quot;Room Card\\\&quot;,\\\&quot;event\\\&quot;:\\\&quot;Phone Call\\\&quot;}\&quot;}&quot;,&quot;severityLevel&quot;:1,&quot;properties&quot;:{&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.157Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.5d9e9da9da504456&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/Token&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.406&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/Token&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com | cid-v1:959b3110-9ce6-4c3d-95b6-1ae4a74a1036&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.295Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.f69cb80321a2455a&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/PresenceStatus&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.546&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/PresenceStatus&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com | cid-v1:959b3110-9ce6-4c3d-95b6-1ae4a74a1036&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.297Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Message&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;MessageData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;message&quot;:&quot;{\&quot;type\&quot;:\&quot;INFO\&quot;,\&quot;logMessage\&quot;:\&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4 &apos;s presence updated to IN_CALL\&quot;,\&quot;contextData\&quot;:\&quot;{\\\&quot;data\\\&quot;:\\\&quot;NonTrackingData\\\&quot;}\&quot;}&quot;,&quot;severityLevel&quot;:1,&quot;properties&quot;:{&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.383Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;not_specified&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;Error: not_specified\n    at t.sendExceptionInternal (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:2005343)\n    at t.trackException (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:2005566)\n    at ya (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:44927)\n    at Ia (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:44679)\n    at Oa (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:45321)\n    at https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:322511\n    at c (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983584)\n    at Generator._invoke (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983337)\n    at Generator.forEach.e.&lt;computed&gt; [as throw] (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983941)\n    at r (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:24554)&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;t.sendExceptionInternal&quot;,&quot;assembly&quot;:&quot;at t.sendExceptionInternal (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:2005343)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2},{&quot;level&quot;:1,&quot;method&quot;:&quot;t.trackException&quot;,&quot;assembly&quot;:&quot;at t.trackException (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:2005566)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2},{&quot;level&quot;:2,&quot;method&quot;:&quot;ya&quot;,&quot;assembly&quot;:&quot;at ya (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:44927)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:3,&quot;method&quot;:&quot;Ia&quot;,&quot;assembly&quot;:&quot;at Ia (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:44679)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:4,&quot;method&quot;:&quot;Oa&quot;,&quot;assembly&quot;:&quot;at Oa (https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:45321)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:5,&quot;method&quot;:&quot;&lt;no_method&gt;&quot;,&quot;assembly&quot;:&quot;at https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js:1:322511&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/main.2171b8df.chunk.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:6,&quot;method&quot;:&quot;c&quot;,&quot;assembly&quot;:&quot;at c (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983584)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2},{&quot;level&quot;:7,&quot;method&quot;:&quot;Generator._invoke&quot;,&quot;assembly&quot;:&quot;at Generator._invoke (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983337)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2},{&quot;level&quot;:8,&quot;method&quot;:&quot;Generator.forEach.e.&lt;computed&gt; [as throw]&quot;,&quot;assembly&quot;:&quot;at Generator.forEach.e.&lt;computed&gt; [as throw] (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:983941)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2},{&quot;level&quot;:9,&quot;method&quot;:&quot;r&quot;,&quot;assembly&quot;:&quot;at r (https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js:2:24554)&quot;,&quot;fileName&quot;:&quot;https://salhealth009-rocc.cloud.pcftest.com/static/js/2.9520e03f.chunk.js&quot;,&quot;line&quot;:2}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.629Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.c10104ae119244b3&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.330&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:50.744Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.6de39f9448c94549&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.356&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.067Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.1a7fbf92c45e445b&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-star.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.857&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-star.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.069Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.071Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.105Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.9c0d985625574628&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-7.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.907&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-7.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.114Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.119Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.122Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.3537c04cc29843b8&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-6.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.926&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-6.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.125Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.127Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.139Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.18578e20997545de&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-5.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.948&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-5.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.141Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.144Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.147Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.3ae0ceb786ce4920&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-1.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.967&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-1.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.148Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.149Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.183Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.2bd42465778a4e1d&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-2.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.001&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-2.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.185Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.186Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.188Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.d847cc47035d4f37&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-3.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.004&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-3.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.191Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.192Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.238Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.5fd1c291263b4cbf&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-9.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.033&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-9.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.253Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.263Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.270Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.dd8ee8718f1a4543&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-4.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.082&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-4.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.275Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.278Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.282Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.a467e1d969064557&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-0.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.104&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-0.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.284Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.285Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.287Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.0825f36231064b64&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/disconnect.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.111&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/disconnect.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.290Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.291Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.295Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.41e9fb2a14a249a4&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-8.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.094&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-8.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.296Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.297Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.299Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.fe41a4acc18348f8&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-hash.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.093&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-hash.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.301Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.303Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.324Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.b925aa50b24a42bd&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/outgoing.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.082&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/outgoing.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.326Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:51.327Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:52.271Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.6290469240b64ff2&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.294&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:52.297Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.b3dd01f788524382&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/incoming.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:02.059&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/incoming.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:52.298Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:52.299Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.542Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.1b169bb8b36a499c&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.327&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.568Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.e874f64b55284364&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.330&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.573Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.d518897b437f4e39&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.331&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.575Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.24bf6815f5e94007&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.329&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.872Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.37a44e846bec4b79&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.543&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.877Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.5e72912d0734457b&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.630&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.881Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.5df829f2f8494314&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.548&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.884Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.95fd25a96cfa4cc0&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.536&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.890Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.93c03539d9534f69&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.559&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.893Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.78cf075238ed4539&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.558&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.897Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.dc3f658e21524a14&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.536&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.900Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.2d75b55ab6874821&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.562&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.908Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.0f3427af595c49cd&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.553&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:54.914Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.a1dc00981669479e&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.399&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.134Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.f75e14ffed234eb2&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.355&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.145Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.4e1c3ad8117b488e&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.347&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.148Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.d7f83766e6504b6a&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.330&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.189Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.5d0a4577dec74029&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.322&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.193Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.e9eb8868c3904660&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.324&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.274Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.45d40e244c594285&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.304&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.320Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.8c67e371884a49a7&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.312&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.692Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.ef9e4d23115648d4&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.309&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.696Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.55da7601ca524a2b&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/outgoing.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.902&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/outgoing.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.699Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:56:55.702Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.383Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.d4d157a4f3694e79&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/PresenceStatus&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.507&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/PresenceStatus&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com | cid-v1:959b3110-9ce6-4c3d-95b6-1ae4a74a1036&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.386Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Message&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;MessageData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;message&quot;:&quot;{\&quot;type\&quot;:\&quot;INFO\&quot;,\&quot;logMessage\&quot;:\&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4 &apos;s presence updated to AVAILABLE\&quot;,\&quot;contextData\&quot;:\&quot;{\\\&quot;data\\\&quot;:\\\&quot;NonTrackingData\\\&quot;}\&quot;}&quot;,&quot;severityLevel&quot;:1,&quot;properties&quot;:{&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.485Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.342781e670cf46cc&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.657&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.488Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.d505fea7c5ff4349&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointMetrics&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.666&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointMetrics&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.514Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.dc672d5453834813&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.612&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://eventgw.twilio.com/v4/EndpointEvents&quot;,&quot;target&quot;:&quot;eventgw.twilio.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.703Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.55f49e27c1ab4520&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/disconnect.mp3?cache=1.9.7&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.882&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/disconnect.mp3?cache=1.9.7&quot;,&quot;target&quot;:&quot;media.twiliocdn.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.711Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.717Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;Uncaught InvalidStateError: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;window.onerror&quot;,&quot;assembly&quot;:&quot;window.onerror@chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37&quot;,&quot;fileName&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;line&quot;:9}]}],&quot;severityLevel&quot;:3}}},{&quot;time&quot;:&quot;2020-07-03T00:57:04.725Z&quot;,&quot;iKey&quot;:&quot;f1d8f8ab-24de-44e7-b3da-904bc8149f24&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.f1d8f8ab24de44e7b3da904bc8149f24.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;021d5324-3547-41a2-aeb1-a1b284abfcb4&quot;,&quot;ai.session.id&quot;:&quot;7eff4522-6fa2-4391-aafa-ac0dc8927ff0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;eb88bec7f51d42779927f35f9f367387&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.5.3&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|eb88bec7f51d42779927f35f9f367387.c3b9d124dcd94ed5&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.331&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST /roccWebAppLogger&quot;,&quot;target&quot;:&quot;salhealth009-rocc.cloud.pcftest.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;,&quot;customerInfo&quot;:&quot;{\&quot;ProfileType\&quot;:\&quot;ExpertUser\&quot;,\&quot;RoomName\&quot;:\&quot;\&quot;,\&quot;CustomerName\&quot;:\&quot;salhealth009\&quot;,\&quot;UserName\&quot;:\&quot;ghankoo.sal@yopmail.com\&quot;}&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/static/media/DLS_Show.4a3826e1.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">static/media/DLS_Show.4a3826e1.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.2976e9923b804dd2</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/static/media/CT.8b1560e7.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">static/media/CT.8b1560e7.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.0c5a988648684bc6</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/static/media/webcall.da3ac2bf.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">static/media/webcall.da3ac2bf.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.0ec9a7081ef94591</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/static/media/call.d7717974.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">static/media/call.d7717974.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.ca82b96cef834a2c</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/static/media/MR.06cdb1ad.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">static/media/MR.06cdb1ad.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.794e35a969ab4250</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://salhealth009-rocc.cloud.pcftest.com/philips/rocc/presence/Subscription/021d5324-3547-41a2-aeb1-a1b284abfcb4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">philips/rocc/presence/Subscription/021d5324-3547-41a2-aeb1-a1b284abfcb4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">acd6b03a-352f-4dd7-93cb-ab662423c34f</stringProp>
                </elementProp>
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|eb88bec7f51d42779927f35f9f367387.eed0d35c4b9b4ad3</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:bf76af82-2ebc-4712-bf9d-bf14bf226da9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/disconnect.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/disconnect.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-0.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-0.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-1.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-1.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-2.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-2.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-3.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-3.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-4.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-4.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-5.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-5.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-6.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-6.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-7.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-7.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-8.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-8.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-9.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-9.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-hash.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-hash.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/dtmf-star.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/dtmf-star.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/incoming.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/incoming.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media.twiliocdn.com/sdk/js/client/sounds/releases/1.0.0/outgoing.mp3?cache=1.9.7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">1.9.7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/js/client/sounds/releases/1.0.0/outgoing.mp3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eventgw.twilio.com/v4/EndpointEvents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;publisher&quot;:&quot;twilio-js-sdk&quot;,&quot;group&quot;:&quot;signaling-state&quot;,&quot;name&quot;:&quot;closed&quot;,&quot;timestamp&quot;:&quot;2020-07-03T00:57:03.900Z&quot;,&quot;level&quot;:&quot;DEBUG&quot;,&quot;payload_type&quot;:&quot;application/json&quot;,&quot;private&quot;:false,&quot;payload&quot;:{&quot;aggressive_nomination&quot;:false,&quot;browser_extension&quot;:false,&quot;dscp&quot;:true,&quot;ice_restart_enabled&quot;:false,&quot;platform&quot;:&quot;WebRTC&quot;,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;selected_region&quot;:&quot;gll&quot;,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;temp_call_sid&quot;:&quot;TJScd6e56c3-6c12-45ae-96f8-074f4810da92&quot;,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v4/EndpointEvents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Twilio-Token" elementType="Header">
                  <stringProp name="Header.name">X-Twilio-Token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQ2UzZmUzNTNiYzNjYmExNzEzYmRkOWYxOTkxOTdhZjQ4IiwiZXhwIjoxNTkzNzQxNDEwLCJzY29wZSI6InNjb3BlOmNsaWVudDpvdXRnb2luZz9hcHBTaWQ9QVBjNzgwZWZmNGNhZDM4MWYwZTBmMmRlZDM4NWIzZWE4ZSJ9.hrkP7xZpJb5bqT9_Q24R51-xGzxbOSmYxpNc1L1e58M</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://eventgw.twilio.com/v4/EndpointMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;publisher&quot;:&quot;twilio-js-sdk&quot;,&quot;group&quot;:&quot;quality-metrics-samples&quot;,&quot;name&quot;:&quot;metrics-sample&quot;,&quot;timestamp&quot;:&quot;2020-07-03T00:57:03.822Z&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;payload_type&quot;:&quot;application/json&quot;,&quot;private&quot;:false,&quot;payload&quot;:[{&quot;timestamp&quot;:&quot;2020-07-03T00:56:55.874Z&quot;,&quot;total_packets_received&quot;:0,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:23,&quot;total_bytes_received&quot;:0,&quot;total_bytes_sent&quot;:1114,&quot;packets_received&quot;:0,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:0,&quot;bytes_sent&quot;:1114,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:2010,&quot;audio_level_out&quot;:0,&quot;call_volume_input&quot;:0.0012254901960784314,&quot;call_volume_output&quot;:0,&quot;jitter&quot;:0,&quot;rtt&quot;:175,&quot;mos&quot;:null,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:56:56.874Z&quot;,&quot;total_packets_received&quot;:43,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:73,&quot;total_bytes_received&quot;:4969,&quot;total_bytes_sent&quot;:3241,&quot;packets_received&quot;:43,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:4969,&quot;bytes_sent&quot;:2127,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1881,&quot;audio_level_out&quot;:4492,&quot;call_volume_input&quot;:0,&quot;call_volume_output&quot;:0.028431372549019607,&quot;jitter&quot;:1,&quot;rtt&quot;:173,&quot;mos&quot;:4.29,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:56:57.871Z&quot;,&quot;total_packets_received&quot;:44,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:124,&quot;total_bytes_received&quot;:5057,&quot;total_bytes_sent&quot;:5640,&quot;packets_received&quot;:1,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:88,&quot;bytes_sent&quot;:2399,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1893,&quot;audio_level_out&quot;:0,&quot;call_volume_input&quot;:0,&quot;call_volume_output&quot;:0,&quot;jitter&quot;:71,&quot;rtt&quot;:174,&quot;mos&quot;:3.79,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:56:58.872Z&quot;,&quot;total_packets_received&quot;:94,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:174,&quot;total_bytes_received&quot;:10521,&quot;total_bytes_sent&quot;:7789,&quot;packets_received&quot;:50,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:5464,&quot;bytes_sent&quot;:2149,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1577,&quot;audio_level_out&quot;:2388,&quot;call_volume_input&quot;:0.000980392156862745,&quot;call_volume_output&quot;:0.2372549019607843,&quot;jitter&quot;:4,&quot;rtt&quot;:174,&quot;mos&quot;:4.27,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:56:59.871Z&quot;,&quot;total_packets_received&quot;:144,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:224,&quot;total_bytes_received&quot;:17011,&quot;total_bytes_sent&quot;:9796,&quot;packets_received&quot;:50,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:6490,&quot;bytes_sent&quot;:2007,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1850,&quot;audio_level_out&quot;:6402,&quot;call_volume_input&quot;:0.0004901960784313725,&quot;call_volume_output&quot;:0.23112745098039217,&quot;jitter&quot;:1,&quot;rtt&quot;:174,&quot;mos&quot;:4.29,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:57:00.871Z&quot;,&quot;total_packets_received&quot;:194,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:274,&quot;total_bytes_received&quot;:23280,&quot;total_bytes_sent&quot;:11811,&quot;packets_received&quot;:50,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:6269,&quot;bytes_sent&quot;:2015,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1838,&quot;audio_level_out&quot;:7787,&quot;call_volume_input&quot;:0,&quot;call_volume_output&quot;:0.21764705882352942,&quot;jitter&quot;:3,&quot;rtt&quot;:0.174,&quot;mos&quot;:4.43,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:57:01.871Z&quot;,&quot;total_packets_received&quot;:244,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:324,&quot;total_bytes_received&quot;:29686,&quot;total_bytes_sent&quot;:13811,&quot;packets_received&quot;:50,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:6406,&quot;bytes_sent&quot;:2000,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:1991,&quot;audio_level_out&quot;:7448,&quot;call_volume_input&quot;:0.006617647058823529,&quot;call_volume_output&quot;:0.18529411764705883,&quot;jitter&quot;:1,&quot;rtt&quot;:0.174,&quot;mos&quot;:4.43,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;},{&quot;timestamp&quot;:&quot;2020-07-03T00:57:02.870Z&quot;,&quot;total_packets_received&quot;:294,&quot;total_packets_lost&quot;:0,&quot;total_packets_sent&quot;:374,&quot;total_bytes_received&quot;:34728,&quot;total_bytes_sent&quot;:15856,&quot;packets_received&quot;:50,&quot;packets_lost&quot;:0,&quot;packets_lost_fraction&quot;:0,&quot;bytes_received&quot;:5042,&quot;bytes_sent&quot;:2045,&quot;audio_codec&quot;:&quot;opus&quot;,&quot;audio_level_in&quot;:2000,&quot;audio_level_out&quot;:6418,&quot;call_volume_input&quot;:0,&quot;call_volume_output&quot;:0.1306372549019608,&quot;jitter&quot;:3,&quot;rtt&quot;:0.174,&quot;mos&quot;:4.43,&quot;call_sid&quot;:&quot;CAc10fede76fb5bf7125f549ecaf509044&quot;,&quot;dscp&quot;:true,&quot;sdk_version&quot;:&quot;1.9.7&quot;,&quot;direction&quot;:&quot;OUTGOING&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v4/EndpointMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Twilio-Token" elementType="Header">
                  <stringProp name="Header.name">X-Twilio-Token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQ2UzZmUzNTNiYzNjYmExNzEzYmRkOWYxOTkxOTdhZjQ4IiwiZXhwIjoxNTkzNzQxNDEwLCJzY29wZSI6InNjb3BlOmNsaWVudDpvdXRnb2luZz9hcHBTaWQ9QVBjNzgwZWZmNGNhZDM4MWYwZTBmMmRlZDM4NWIzZWE4ZSJ9.hrkP7xZpJb5bqT9_Q24R51-xGzxbOSmYxpNc1L1e58M</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
